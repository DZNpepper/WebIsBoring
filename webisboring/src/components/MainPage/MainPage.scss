// Define variables for reuse
$white: rgba(255, 255, 255, 0.8); // White color with transparency
$black: #000000; // Black color
$gray: #808080; // Gray color

// Main page styles
.main-page {
  padding: 1px; // Padding

  // Components grid styles
  .components-grid {
    display: grid; // Grid display
    grid-template-columns: 1fr; // Single column for all sizes
    gap: 1px; // Gap between grid items
  }

  // Component item styles
  .component-item {
    height: 100vh; // Full viewport height for each component
    display: flex; // Flex display
    align-items: center; // Center align items vertically
    justify-content: center; // Center align items horizontally
    color: white; // Text color
    font-size: 20px; // Font size
    overflow: hidden; // Hide overflow
    position: relative; // Relative positioning
    background-size: cover; // Ensures the image covers the full area
    background-position: center; // Centers the image in the element
    background-repeat: no-repeat; // Prevents the image from repeating

    
    &.locked {
      filter: grayscale(100%); // Grey out the image for locked items

      .overlay {
        background-color: rgba(128, 128, 128, 0.8); // Applying a grey transparent overlay
      }
    }

    // Media query for smaller screens
    @media (max-width: 768px) {
      height: 59vh; // Reduce height for smaller screens
    }

    // Apply parallax effect
    &.parallax {
      background-attachment: fixed; // Fixed background attachment for parallax effect
    }


  }

  // Overlay styles
  .overlay {
    width: 20%; // Reduce width for smaller screens
    height: 8%; // Overlay width
    padding: 10px; // Padding for overlay content
    background-color: $white; // White background color
    position: absolute; // Absolute positioning
    text-align: center; // Center align text
    text-decoration: none;
    font-size: 40px; // Font size
    font-weight: bold; // Bold font weight
    color: #000;

    // Center text vertically
    display: flex; // Flex display
    flex-direction: column; // Column direction for flex
    justify-content: center; // Center justify content vertically

    // Adjust width for smaller screens
    @media (max-width: 768px) {
      width: 62%; // Reduce width for smaller screens
      height: 20%;
    }
  }

  // Component name styles
  .component-name {
    font-size: 24px; // Font size
    font-weight: bold; // Bold font weight

    // Adjust font size for smaller screens
    @media (max-width: 768px) {
      font-size: 18px; // Reduce font size for smaller screens
    }
  }

  // Component description styles
  .component-description {
    font-size: 16px; // Font size
  }
}
.lock-icon {
  width: 25%; // Increase the width to be 25% of the parent container
  aspect-ratio: 1; // Keep the aspect ratio to 1 to maintain a square shape
  background: $white; // White background color for the lock
  border-radius: 50%; // Make it circular
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;

  &::before, &::after {
    background: $black; // Ensure the parts of the lock are black
  }

  &::before {
    content: '';
    position: absolute;
    width: 50%; // Making the shackle wider
    height: 30%; // Making the shackle shorter relative to the base
    top: 10%;
    left: 25%; // Center horizontally
    border-radius: 50%; // Rounded top of the shackle
  }

  &::after {
    content: '';
    position: absolute;
    width: 60%; // Base of the lock width
    height: 40%; // Base of the lock height
    bottom: 20%; // Positioning from the bottom
    left: 20%; // Center horizontally
    border-radius: 10%; // Slightly rounded corners for the lock base
  }
}
